def versionRev = 506

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
        name = "gt"
        url = "https://gregtech.overminddl1.com/"
   		}
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

apply plugin: 'forge' // Add forge dependency
apply plugin: 'idea'
import de.undercouch.gradle.tasks.download.Download

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "3.0.12.${versionRev}-impact" // Set the version number
group= "micdoodle8.mods.galacticraft"
archivesBaseName = "Galacticraft"
	
minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10" // Forge version
    runDir = "run" // This is where forge will download Minecraft assets
}

configurations {
	provided
	embedded
	compile.extendsFrom provided, embedded
}
def micversion = "3.0.15-GTNH"
def micjenkinsbuild = 2
def gtversion = "5.09.33.54"
def gtjenkinsbuild = 682

repositories {
    maven {
        name 'Forge'
        url 'https://files.minecraftforge.net/maven'
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
    maven {
        name = "ic2, forestry"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "gt"
        url = "https://gregtech.overminddl1.com/"
    }
    maven {
        url = "https://mod-buildcraft.com/releases/"
    }
    maven { // TConstruct
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    ivy {
        name 'gtnh_download_source_stupid_underscore_typo'
        artifactPattern "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[module]_[revision].[ext]"
    }
    ivy {
        name 'gtnh_download_source'
        artifactPattern "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[module]-[revision].[ext]"
    }
}

dependencies {
	compile files("libs/")
    
    compileOnly "com.mod-buildcraft:buildcraft:7.1.23:api"

    compileOnly "codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev"
    compileOnly "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev" 
    compileOnly "notenoughitems:NotEnoughItems:1.7.10-1.0.5.111:dev"

    provided ("appeng:appliedenergistics2:rv3-beta-22:dev") {
        exclude module: '*'
    }

    compileOnly "net.industrial-craft:industrialcraft-2:2.2.790-experimental:dev"
}

task getGalaxySpace(type: Download) {
    onlyIf {
        !file("libs/GalaxySpace-1.1.4-impact-dev.jar").exists()
    }
    dest file("libs/GalaxySpace-1.1.4-impact-dev.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

task getMiccdoodleCore(type: Download, dependsOn: "getGalaxySpace") {
	onlyIf {
		!file("libs/MiccdoodleCore-${micversion}-(${micjenkinsbuild}).jar").exists()
	}
	src "http://jenkins.usrv.eu:8080/job/MicdoodleCore/${micjenkinsbuild}/artifact/build/libs/MicdoodleCore-1.7.10-${micversion}-dev.jar"
	dest file("libs/MiccdoodleCore-${micversion}-(${micjenkinsbuild}).jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
    delete fileTree("$projectDir/libs/") {
        include "MiccdoodleCore-*.jar"
        exclude "MiccdoodleCore-${micversion}-(${micjenkinsbuild}).jar"
    }
}

tasks.setupCIWorkspace.dependsOn getMiccdoodleCore
tasks.setupDevWorkspace.dependsOn getMiccdoodleCore
tasks.setupDecompWorkspace.dependsOn getMiccdoodleCore
tasks.compileJava.dependsOn getMiccdoodleCore

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    exclude '**/Thumbs.db'
}


// Planets addon files/directories 
def planetsFiles = ['micdoodle8/mods/galacticraft/planets/**',
					'assets/galacticraftmars/**',
					'assets/galacticraftasteroids/**']

jar {
    classifier = 'full'
}

task devJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'dev'
    //exclude planetsFiles
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
	// Jar will always be updated
	outputs.upToDateWhen {false}
	// Set the jar's base name
	baseName = "Galacticraft"
    classifier = 'api'
    
    include(['micdoodle8/mods/galacticraft/api/**'])
}
tasks.jar.dependsOn('devJar', 'apiJar')

// Tell the artifact system about our extra jars
artifacts {
    jar
    devJar
    apiJar
}
